{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f188\froman\fcharset238\fprq2 Times New Roman CE;}{\f189\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f191\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f192\froman\fcharset162\fprq2 Times New Roman Tur;}{\f193\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f194\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f195\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f196\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f208\fmodern\fcharset238\fprq1 Courier New CE;}{\f209\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f211\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f212\fmodern\fcharset162\fprq1 Courier New Tur;}{\f213\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f214\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f215\fmodern\fcharset186\fprq1 Courier New Baltic;}
{\f216\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 Plain Text;}{\*\ts16\tsrowd\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \sbasedon11 \snext16 Table Grid;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\pgptbl {\pgp\ipgp0\itap0\li0\ri0\sb0\sa0}}{\*\rsidtbl \rsid879684\rsid940354\rsid3897888\rsid6170203\rsid7612408
\rsid8287407\rsid10423123\rsid12089779\rsid14626869\rsid14769603\rsid15553603\rsid16076414}{\*\generator Microsoft Word 11.0.5604;}{\info{\title NICE Assembler }{\author Naresh Jotwani}{\operator 200291005}{\creatim\yr2008\mo12\dy6\hr17\min15}
{\revtim\yr2008\mo12\dy6\hr19\min30}{\version8}{\edmins137}{\nofpages3}{\nofwords1179}{\nofchars6724}{\*\company DAIICT}{\nofcharsws7888}{\vern24689}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1701\dgvorigin1984\dghshow1\dgvshow1
\jexpand\viewkind5\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\snaptogridincell\allowfieldendsel\wrppunct
\asianbrkrule\rsidroot3897888\newtblstyruls\nogrowautofit \fet0\sectd \linex0\endnhere\pgbrdropt32\sectlinegrid360\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang 
{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain 
\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\ipgp1 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\fs24\insrsid14769603 
\par }{\b\fs24\insrsid14626869\charrsid15553603 NICE Assembler 
\par }{\fs24\ul\insrsid14626869\charrsid15553603 Version 1.0 December 2008
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 A simple assembler for writing }{\b\fs24\insrsid14626869\charrsid15553603 NICE}{\fs24\insrsid14626869\charrsid15553603 
 programs has been included with the simulator. This document describes in brief the assembler operations. 
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 An assembly language program is processed one line at a time. A line of the program may be one of:}{\fs24\insrsid14626869 
\par }{\fs24\insrsid15553603\charrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 a. an assembler directive (or \lquote pseudo-operation\rquote ), as described below
\par b. an instruction of the }{\b\fs24\insrsid14626869\charrsid15553603 NICE}{\fs24\insrsid14626869\charrsid15553603  processor, coded in assembly language
\par c. 8-bit binary data (a byte) to be loaded into memory 
\par d. comment line, which has characters \lquote //\rquote  in the first two columns
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Comments may also be included \lquote in-line\rquote , i.e. all text to the right of \lquote //\rquote  in a line is neglected.
\par }{\fs24\ul\insrsid14626869\charrsid15553603 
\par Notation}{\fs24\insrsid14626869\charrsid15553603 :
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 All text included in an assembly language program is case-insensitive, e.g. \lquote ADD\rquote  and \lquote add\rquote  have the same meaning.
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Numerical values included in the program must be in }{\fs24\ul\insrsid14626869\charrsid15553603 hexadecimal}{\fs24\insrsid14626869\charrsid15553603  (}{\fs24\ul\insrsid14626869\charrsid15553603 hex}{
\fs24\insrsid14626869\charrsid15553603 ) format, except that the .bin pseudo-operation switches the assembler to accept 8-bit binary data. Because of this restriction of hex format, a simple constant such as 1 must b
e written as x1 or x01. The hex constant x0032, for example, represents decimal value 3*16+2 = 50.  
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 For convenience, however, register references are made using decimal numbers, i.e. the processor registers are numbered R0 to R15 (rather than R0 to RF!).
\par }{\fs24\ul\insrsid14626869\charrsid15553603 
\par Assembler directives}{\fs24\insrsid14626869\charrsid15553603 :
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 .start <hex address>
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Specifies the starting address for execution of the program, once the program is assembled and loaded into memory. Use of a label is allowed in place of <hex address> provided that the label is already defined
 in an earlier line (i.e. is not a forward reference).
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 .orig <hex address>
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Specifies the location from which successive bytes from the output of the assembly program will be loaded into memory.
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 .bin
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Specifies that 8-bit binary data is being supplied in successive lines of the program. 
\par Note that the only assembler directive allowed in this binary mode is .asm.
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 .asm
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Specifies that assembly language instructions of the }{\b\fs24\insrsid14626869\charrsid15553603 NICE}{\fs24\insrsid14626869\charrsid15553603  processor are being supplied in successive lines of the program.
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 .clear
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Specifies that the 4 kilobytes of simulator memory should be cleared to all zero bits.
\par This directive should be viewed as a \lquote loader\rquote  option \endash  i.e. whether loader should clear memory before loading into it the output generated by subsequent assembly language inst
ructions. Normally therefore this directive would appear at the start of the assembly language program. If output of two or more assembly language programs is to be loaded into memory one after the other, then this directive should only appear with the fi
rst program.
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 .end
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Specifies the end of the assembly language program. This directive is optional (since \lquote end of file\rquote  also indicates program end), but may be used for readability.
\par 
\par }{\fs24\ul\insrsid14626869\charrsid15553603 Byte or word mode:
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Byte or word mode of operation (see the textbook) must be specified explicitly \endash  i.e. there is no default provided in the assembler. Thus \lquote MOV R1 R2\rquote  is illegal; it should be either \lquote 
MOV B R1 R2\rquote  or \lquote MOV W R1 R2\rquote  (in upper or lower case).
\par 
\par }{\fs24\ul\insrsid14626869\charrsid15553603 Addressing modes}{\fs24\insrsid14626869\charrsid15553603 :
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 The addressing modes described in the textbook are supported. 
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Register addressing - using e.g. r11, r0, R15, etc. \endash  where the register number is in decimal, from 0 to 15.  
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Direct addressing - e.g. memory address x200, or a label representing a memory location. This addressing mode occurs in load and store instructions, and in conditional or unconditional transfers of control.
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Indirect addressing \endash  a register has the memory address needed. This mode occurs in load and store instructions, e.g. load w [r8] r9.
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Indexed addressing - in load and store instr
uctions, e.g. load b x200[r8] r9. The base address (e.g. x200) occupies 19 bits in the machine instruction, and is padded with 5 zero bits on the right at the time of execution of instruction. Assembly language program must contain therefore the 24-bit ba
se address in which the right-most 5 bits are \lquote 00000\rquote . Thus the programmed base address must be a multiple of x20.
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Immediate addressing \endash  in arithmetic, logic and move instructions. The immediate constant is 20 bits in size, and is unsigned. 
\par 
\par }{\fs24\ul\insrsid14626869\charrsid15553603 Labels}{\fs24\insrsid14626869\charrsid15553603 : 
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Labels may be used with }{\b\fs24\insrsid14626869\charrsid15553603 NICE}{\fs24\insrsid14626869\charrsid15553603  instructions, so that the instructions can be used as targets of transfer of control. }{
\fs24\insrsid15553603 
\par 
\par }{\fs24\insrsid14626869\charrsid15553603 In a one-pass assembler, care needs to be taken to support forward references \endash  i.e. use of a label in a transfer of control }{\fs24\ul\insrsid14626869\charrsid15553603 before}{
\fs24\insrsid14626869\charrsid15553603  it is defined. The present assembler performs \lquote back-patching\rquote 
 of forward reference labels. For example, suppose the instruction JMP XXX occurs in the program, but label XXX has not yet been defined. The assembler will leave zeros in place of the JMP target. In the 
last phase of assembly, once XXX has been defined, the actual address of XXX will be \lquote back-patched\rquote  into the JMP instruction. }{\fs24\insrsid15553603 
\par 
\par }{\fs24\insrsid14626869\charrsid15553603 When such \lquote back-patching occurs\rquote , the assembler generates appropriate informative messages for the user.
\par 
\par }{\b\fs24\ul\insrsid14626869\charrsid15553603 NICE}{\fs24\ul\insrsid14626869\charrsid15553603  Instruction set}{\fs24\insrsid14626869\charrsid15553603 :
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 For ease of reference, the }{\b\fs24\insrsid14626869\charrsid15553603 NICE}{\fs24\insrsid14626869\charrsid15553603  instruction set is }{\fs24\insrsid8287407 summariz}{\fs24\insrsid14626869\charrsid15553603 
ed below}{\fs24\insrsid8287407 .}{\fs24\insrsid14626869\charrsid15553603  }{\fs24\insrsid8287407 For more details and explanation, please refer to }{\fs24\insrsid14626869\charrsid15553603 the textbook (}{\fs24\insrsid6170203 Chapters 4 & 5, }{
\fs24\insrsid14626869\charrsid15553603 Table 5.1).}{\fs24\insrsid14626869 
\par }{\fs24\insrsid14769603 
\par }\pard \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\ipgp1\pararsid940354 {\fs24\insrsid940354 |-------}{\fs24\insrsid16076414 |}{\fs24\insrsid940354 -----------}{\fs24\insrsid16076414 |}{\fs24\insrsid940354 
--------------------------}{\fs24\insrsid16076414 |}{\fs24\insrsid940354 -}{\fs24\insrsid16076414 ---}{\fs24\insrsid940354 --------|
\par |}{\b\fs24\insrsid940354\charrsid16076414 Instr-}{\fs24\insrsid940354  | }{\b\fs24\insrsid940354\charrsid16076414 Modifier}{\fs24\insrsid940354   | }{\b\fs24\insrsid940354\charrsid16076414 First operand}{\fs24\insrsid940354             | }{
\b\fs24\insrsid940354\charrsid16076414 Second}{\fs24\insrsid940354      |
\par |}{\b\fs24\insrsid940354\charrsid16076414 uction}{\fs24\insrsid940354  |           |                          | }{\b\fs24\insrsid940354\charrsid16076414 operand}{\fs24\insrsid940354     |
\par }\pard \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\ipgp1 {\fs24\insrsid14769603 |-------}{\fs24\insrsid16076414 |}{\fs24\insrsid14769603 -----------}{\fs24\insrsid16076414 |}{\fs24\insrsid14769603 
--------------------------}{\fs24\insrsid16076414 |}{\fs24\insrsid14769603 ------------|
\par |LOAD}{\fs24\insrsid10423123 ,}{\fs24\insrsid14769603   | byte/word | memory address: direct,  | register   |
\par |}{\fs24\insrsid10423123 STORE}{\fs24\insrsid14769603   |           | Indirect, indexed        |            |
\par |-------|-----------|--------------------------|------------|}{\fs24\insrsid14769603\charrsid15553603 
\par }\pard \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\ipgp1\pararsid14769603 {\fs24\insrsid14769603 |MOV    | b}{\fs24\insrsid7612408 /w      }{\fs24\insrsid14769603  | source: register or      | register   |
\par |}{\fs24\insrsid940354  }{\fs24\insrsid14769603       |           | immediate    }{\fs24\insrsid940354             |            |}{\fs24\insrsid14769603 
\par |-------|-----------|--------------------------|------------|}{\fs24\insrsid14769603\charrsid15553603 
\par }{\fs24\insrsid14769603 |}{\fs24\insrsid940354 IN}{\fs24\insrsid10423123 ,}{\fs24\insrsid940354    }{\fs24\insrsid14769603  | }{\fs24\insrsid940354           | port number            }{\fs24\insrsid14769603   | register   |
\par |}{\fs24\insrsid940354 OUT }{\fs24\insrsid14769603    }{\fs24\insrsid940354 |   }{\fs24\insrsid14769603         |                          |            |
\par }\pard \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\ipgp1\pararsid16076414 {\fs24\insrsid16076414 |-------|-----------|--------------------------|------------|}{\fs24\insrsid16076414\charrsid15553603 
\par }{\fs24\insrsid16076414 |ADD,   | b}{\fs24\insrsid7612408 /w      }{\fs24\insrsid16076414  | source: register or      | register   |
\par |SUB    |           | immediate                |            |
\par |AND,   |           |                          |            |
\par |OR,    |           |                          |            |
\par |XOR,   |           |                          |            |
\par |NOT,   |           |                          |            |
\par |COMP   |           |                          |            |
\par |-------|-----------|--------------------------|------------|}{\fs24\insrsid16076414\charrsid15553603 
\par }{\fs24\insrsid16076414 |SHIFT  | }{\fs24\insrsid7612408 b/w,}{\fs24\insrsid16076414       | }{\fs24\insrsid7612408 register}{\fs24\insrsid16076414                  | }{\fs24\insrsid7612408 count}{\fs24\insrsid16076414       |
\par |       | }{\fs24\insrsid7612408 r/l,    }{\fs24\insrsid16076414   |                          |            |
\par |       | }{\fs24\insrsid7612408 c}{\fs24\insrsid16076414 /}{\fs24\insrsid7612408 nc}{\fs24\insrsid16076414       |                          |            |
\par |-------|-----------|--------------------------|------------|
\par |JMP    |           | }{\fs24\insrsid7612408 destination }{\fs24\insrsid16076414              |            |
\par |J}{\i\fs24\insrsid16076414\charrsid16076414 cond}{\fs24\insrsid16076414   |           | }{\fs24\insrsid7612408 address}{\fs24\insrsid16076414                   |            |
\par |J}{\i\fs24\insrsid16076414\charrsid16076414 flag}{\fs24\insrsid16076414   |           |                          |            |
\par |J}{\i\fs24\insrsid16076414\charrsid16076414 nflag}{\fs24\insrsid16076414  |           |                          |            |
\par |CALL   |           |                          |            |
\par |-------|-----------|--------------------------|------------|
\par |RET,   |           |                          |            |
\par |HALT   |           |                          |            |
\par |-------|-----------|--------------------------|------------|
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\ipgp1 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\insrsid7612408 
\par             Instruc}{\f2\insrsid14626869\charrsid15553603 tion set of }{\b\f2\insrsid14626869\charrsid15553603 NICE}{\f2\insrsid14626869\charrsid15553603  processor
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\ipgp1 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\ul\insrsid15553603 
\par }{\fs24\ul\insrsid6170203 Assembly language i}{\fs24\ul\insrsid14626869\charrsid15553603 nstruction format}{\fs24\insrsid14626869\charrsid15553603 :
\par }{\b\fs24\insrsid15553603 
\par }{\fs24\insrsid6170203\charrsid6170203 In assembly language, }{\b\fs24\insrsid14626869\charrsid15553603 NICE}{\fs24\insrsid14626869\charrsid15553603  instructions are typed in the following format:
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 [}{\fs24\ul\insrsid14626869\charrsid15553603 label}{\fs24\insrsid14626869\charrsid15553603 :] }{\fs24\ul\insrsid14626869\charrsid15553603 opcode}{\fs24\insrsid14626869\charrsid15553603  }{
\fs24\ul\insrsid14626869\charrsid15553603 modifier(s)}{\fs24\insrsid14626869\charrsid15553603  }{\fs24\ul\insrsid14626869\charrsid15553603 operand(s)}{\fs24\insrsid14626869\charrsid15553603 
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Here }{\fs24\ul\insrsid14626869\charrsid15553603 label}{\fs24\insrsid14626869\charrsid15553603  is optional. Opcode, modifier(s) and operand(s) are 
specified as shown in the textbook. Commas and square brackets may be used to increase readability of the assembly language programs, but they are not required. Tokens of the instructions must be separated by spaces or commas. Redundant commas and bracket
s are tolerated.
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 Thus the following pairs show equivalent instructions:
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 \lquote MOV B R1 R2\rquote   }{\fs24\insrsid7612408 &}{\fs24\insrsid14626869\charrsid15553603   \lquote MOV B R1,R2\rquote 
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 \lquote LOAD W x200[R1] R2\rquote   }{\fs24\insrsid7612408 &}{\fs24\insrsid14626869\charrsid15553603   \lquote LOAD W x200 R1 R2\rquote 
\par }{\fs24\insrsid15553603 
\par }{\fs24\insrsid14626869\charrsid15553603 The sample assembly language programs included with the simulator provide many examples.
\par  
\par 
\par 
\par 
\par }}