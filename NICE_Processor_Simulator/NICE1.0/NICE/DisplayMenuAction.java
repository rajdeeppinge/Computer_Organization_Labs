
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.io.*;
import java.awt.print.*;
import java.util.*;
import javax.swing.undo.*;
import javax.swing.filechooser.FileFilter;

/**
* Handles the menu actions of Display menu in the application
*/
public class DisplayMenuAction extends AbstractAction {
    protected LC frame;

    public DisplayMenuAction(String name, Icon icon, String descrip,
    Integer mnemonic, KeyStroke accel, LC gui) {
        super(name, icon);
        putValue(SHORT_DESCRIPTION, descrip);
        putValue(MNEMONIC_KEY, mnemonic);
        putValue(ACCELERATOR_KEY, accel);
        frame = gui;
    }

    /**
    * implements the actionPerformed method of AbstractAction
    * triggered when an event is generated by any component
    *
    * @param e component triggering this call
    */
    public void actionPerformed(ActionEvent e) {
        if(e.getActionCommand().equals("Binary Format"))
        outputDisplayBinaryAction(e);
        if(e.getActionCommand().equals("Hexadecimal Format"))
        outputDisplayHexAction(e);
    }

    /**
    * sets the mode of display of assembled code to Binary format
    *
    * @param e component triggering this call
    */
    public void outputDisplayBinaryAction(ActionEvent e) {
        frame.format=0;
        frame.showBinary.setSelected(true);
        frame.showBinary.setEnabled(true);
        frame.showHex.setSelected(false);
        frame.showHex.setEnabled(true);
        frame.assAgain();
    }

    /**
    * sets the mode of display of assembled code to Hexadecimal format
    *
    * @param e component triggering this call
    */
    public void outputDisplayHexAction(ActionEvent e) {
        frame.format=1;
        frame.showBinary.setSelected(false);
        frame.showBinary.setEnabled(true);
        frame.showHex.setSelected(true);
        frame.showHex.setEnabled(true);
        frame.assAgain();
    }
}